import { useState } from 'react'
import reactLogo from './assets/react.svg'
import viteLogo from '/vite.svg'
import './App.css'

function App() {
  const [count, setCount] = useState(0)

  return (
    <>
      <div>
        <a href="https://vite.dev" target="_blank">
          <img src={viteLogo} className="logo" alt="Vite logo" />
        </a>
        <a href="https://react.dev" target="_blank">
          <img src={reactLogo} className="logo react" alt="React logo" />
        </a>
      </div>
      <h1>Vite + React</h1>
      <div className="card">
        <button onClick={() => setCount((count) => count + 1)}>
          count is {count}
        </button>
        <p>
          Edit <code>src/App.jsx</code> and save to test HMR
        </p>
      </div>
      <p className="read-the-docs">
        Click on the Vite and React logos to learn more
      </p>
    </>
  )
}

export default App 

const Album = require('../models/album');

// Fetch albums created by the current user
exports.getMyAlbums = async (req, res) => {
  try {
    const albums = await Album.find({ userId: req.user.id });
    res.status(200).json({ albums });
  } catch (error) {
    console.error("Error fetching albums:", error);
    res.status(500).json({ message: "Failed to fetch albums" });
  }
};

// Add a song to an album
exports.addSongToAlbum = async (req, res) => {
  const { albumId, song } = req.body;

  try {
    const album = await Album.findOne({ _id: albumId, userId: req.user.id });

    if (!album) {
      return res.status(404).json({ message: "Album not found" });
    }

    album.songs.push(song);
    await album.save();

    res.status(200).json({ message: "Song added to album", album });
  } catch (error) {
    console.error("Error adding song:", error);
    res.status(500).json({ message: "Failed to add song" });
  }
};


const createAlbum = async (req, res) => {
  const { name } = req.body;
  const createdBy = req.user.id;

  try {
    const album = new Album({ name, createdBy, songs: [] });
    await album.save();
    res.status(201).json(album);
  } catch (error) {
    res.status(500).json({ error: 'Failed to create album' });
  }
};

// Get all albums for the logged-in user
const getAlbums = async (req, res) => {
  try {
    const albums = await Album.find({ createdBy: req.user.id });
    res.json({ albums });
  } catch (error) {
    res.status(500).json({ error: 'Failed to get albums' });
  }
};

// Add song to album
const addSongToAlbum = async (req, res) => {
  const { albumName } = req.params;
  const { song } = req.body;
  const userId = req.user.id;

  try {
    const album = await Album.findOne({ name: albumName, createdBy: userId });
    if (!album) return res.status(404).json({ message: 'Album not found' });

    album.songs.push(song);
    await album.save();

    res.status(200).json({ message: 'Song added successfully', album });
  } catch (err) {
    res.status(500).json({ message: 'Server error', error: err.message });
  }
};

// Get albums by user ID (for admin or public view)
const getAlbumsByUser = async (req, res) => {
  try {
    const albums = await Album.find({ createdBy: req.params.userId });
    res.status(200).json({ albums });
  } catch (err) {
    res.status(500).json({ message: 'Failed to fetch albums' });
  }
};

// Get songs in an album by album ID
const getSongsInAlbum = async (req, res) => {
  try {
    const album = await Album.findById(req.params.albumId);
    if (!album) return res.status(404).json({ message: 'Album not found' });

    res.status(200).json(album.songs);
  } catch (err) {
    res.status(500).json({ message: 'Failed to fetch songs' });
  }
};

// Delete an album by ID
const deleteAlbum = async (req, res) => {
  try {
    const album = await Album.findOneAndDelete({
      _id: req.params.albumId,
      createdBy: req.user.id,
    });

    if (!album) return res.status(404).json({ message: 'Album not found or not authorized' });

    res.status(200).json({ message: 'Album deleted successfully' });
  } catch (err) {
    res.status(500).json({ message: 'Failed to delete album' });
  }
};

// Export all controller functions
module.exports = {
  createAlbum,
  getAlbums,
  addSongToAlbum,
  getAlbumsByUser,
  getSongsInAlbum,
  deleteAlbum,
}; 
 */